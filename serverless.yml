service: tutoring-auth

frameworkVersion: "3"

useDotenv: true

provider:
  name: aws
  region: us-east-2
  runtime: nodejs14.x
  versionFunctions: false
  stage: ${opt:stage, "${env:stage, 'dev'}"}
  memorySize: 256
  timeout: 15
  apiGateway:
    binaryMediaTypes:
      - "*/*"
  environment:  
    SNS_CREATE_USER: ${env:SNS_CREATE_USER}
    STORAGE_FOLDER: ${env:STORAGE_FOLDER}
    S3_BUCKET: ${env:S3_BUCKET}
    S3_REGION: ${env:S3_REGION}
    PRIVATE_S3_BUCKET: ${env:PRIVATE_S3_BUCKET}
    PRIVATE_S3_REGION: ${env:PRIVATE_S3_REGION}

  iam:
    role:
      statements:
        - Effect: 'Allow'
          Action:
            - 's3:*'
            - 'lambda:*'
            - 'sqs:*'
            - 'sns:*'
            - 'execute-api:*'
          Resource: '*'

custom:
  prune:
    automatic: true
    includeLayers: true
    number: 3
  apigwBinary:
    types:
      - "multipart/form-data"
      - "image/jpeg"
      - "image/jpeg"
      - "image/pjpeg"
      - "image/png"
      - "image/jpg"
  functionsDir: src/4-framework/functions
  serverless-offline:
    httpPort: 4000
    lambdaPort: 4001  
  webpack:
    webpackConfig: "webpack.config.js"
    packager: "npm"
    packagerOptions:
      noFrozenLockfile: true
    includeModules:
      forceInclude:
        - mysql2
  serverless-offline-sns:
    port: 3999
    debug: true    

plugins:
  - serverless-disable-functions
  - serverless-offline-sns
  - serverless-offline
  - serverless-webpack
  - serverless-prune-plugin
  
functions:
  - "${file(${self:custom.functionsDir}/auth/auth.yml)}"
  - "${file(${self:custom.functionsDir}/user/user.yml)}"  